// var vs let
// область видимості

// for(var i = 0; i < 5; i++){
//   console.log(i);
// }
// //змінну i видно після циклу
// console.log(i, "after");



// for(let i = 0; i < 5; i++){
//   console.log(i);
// }
// console.log(i, "after"); //буде помилка, змінну не видно



// відмінність
// коли оголошуємо через var, люба змінна є undefined
// якщо до неї звернутися до оголошення
// console.log(a); //виведе undefined
// var a = 5;


// якщо оголосити через let
// і до оголошення звернутися
// буде помилка
// console.log(a);// помилка
// let a = 5;



// функції
// використовуються, для того щоб уникнути
// дублювання коду


// два основних типи оголошення функцій
// Function Declaration
// Function Expression
//
//
// Function Declaration
// // function імя_функції() {
// //   тіло функції
// //   виконується як викликати функції
// // }
//
//


// // оголошення функції
// function func() {
//   console.log("hello world");
// }



// для того, щоб викликати функцію,
// потрібно звернутися до неї за ім'ям
// і ()

// func();


//функція може мати параметри
// наприклад

// function add(параметр1, параметр1){
//   тіло функції
// }


// оголосили функцію
// function add(a, b) {
//   console.log(a + b);
// }


// і викликаємо
// add(1,2);

// коли викликаємо функцію і передаємо параметри
// то в цьому випадку a буде
// дорівнювати 1 , а
// b = 2;



// якщо якийсь з параметрів не передати
// він буде undefined
// function someFunc(a, b) {
//   console.log("first ", a);
//   console.log("second ", b); // undefined
// }
// someFunc(1);










//tasks/task5.js
